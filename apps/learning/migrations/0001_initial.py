# Generated by Django 5.0.7 on 2025-09-26 15:41

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255, verbose_name='title')),
                ('slug', models.SlugField(max_length=255, unique=True, verbose_name='slug')),
                ('description', models.TextField(verbose_name='description')),
                ('category', models.CharField(max_length=100, verbose_name='category')),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('published', 'Published'), ('archived', 'Archived')], default='draft', max_length=20, verbose_name='status')),
                ('cover_image_url', models.URLField(blank=True, null=True, verbose_name='cover image URL')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('instructor', models.ForeignKey(limit_choices_to={'role': 'instructor'}, on_delete=django.db.models.deletion.PROTECT, related_name='courses_taught', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Course',
                'verbose_name_plural': 'Courses',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='LearningPath',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255, verbose_name='title')),
                ('description', models.TextField(verbose_name='description')),
                ('supervisor', models.ForeignKey(limit_choices_to={'role': 'supervisor'}, on_delete=django.db.models.deletion.PROTECT, related_name='learning_paths_supervised', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Learning Path',
                'verbose_name_plural': 'Learning Paths',
            },
        ),
        migrations.CreateModel(
            name='LearningPathCourse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField(verbose_name='order')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='learning.course')),
                ('learning_path', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='learning.learningpath')),
            ],
            options={
                'verbose_name': 'Learning Path Course',
                'verbose_name_plural': 'Learning Path Courses',
                'ordering': ['learning_path', 'order'],
                'unique_together': {('learning_path', 'course')},
            },
        ),
        migrations.AddField(
            model_name='learningpath',
            name='courses',
            field=models.ManyToManyField(related_name='learning_paths', through='learning.LearningPathCourse', to='learning.course'),
        ),
        migrations.CreateModel(
            name='Lesson',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200, verbose_name='title')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='order')),
                ('content_type', models.CharField(choices=[('video', 'Video'), ('text', 'Text'), ('quiz', 'Quiz'), ('pdf', 'PDF Document'), ('practical', 'Practical')], max_length=20, verbose_name='content type')),
                ('content_data', models.JSONField(help_text="Flexible data for content, e.g., {'video_url': '...'}", verbose_name='content data')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('course', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='lessons', to='learning.course')),
            ],
            options={
                'verbose_name': 'Lesson',
                'verbose_name_plural': 'Lessons',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('question_text', models.TextField(verbose_name='question text')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='order')),
                ('lesson', models.ForeignKey(limit_choices_to={'content_type': 'quiz'}, on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='learning.lesson')),
            ],
            options={
                'verbose_name': 'Question',
                'verbose_name_plural': 'Questions',
                'ordering': ['lesson', 'order'],
            },
        ),
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('answer_text', models.CharField(max_length=500, verbose_name='answer text')),
                ('is_correct', models.BooleanField(default=False, verbose_name='is correct')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='learning.question')),
            ],
            options={
                'verbose_name': 'Answer',
                'verbose_name_plural': 'Answers',
                'ordering': ['question'],
            },
        ),
        migrations.CreateModel(
            name='Workshop',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255, verbose_name='title')),
                ('description', models.TextField(verbose_name='description')),
                ('workshop_type', models.CharField(choices=[('theoretical', 'Theoretical'), ('practical', 'Practical'), ('mixed', 'Mixed')], max_length=20, verbose_name='workshop type')),
                ('category', models.CharField(choices=[('academic', 'Academic'), ('professional', 'Professional')], max_length=20, verbose_name='category')),
                ('duration_days', models.PositiveIntegerField(verbose_name='duration in days')),
                ('total_hours', models.PositiveIntegerField(verbose_name='total hours')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('instructor', models.ForeignKey(limit_choices_to={'role': 'instructor'}, on_delete=django.db.models.deletion.PROTECT, related_name='workshops_led', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Workshop',
                'verbose_name_plural': 'Workshops',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='lesson',
            name='workshop',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='lessons', to='learning.workshop'),
        ),
        migrations.AddConstraint(
            model_name='lesson',
            constraint=models.CheckConstraint(check=models.Q(models.Q(('course__isnull', False), ('workshop__isnull', True)), models.Q(('course__isnull', True), ('workshop__isnull', False)), _connector='OR'), name='lesson_parent_link_must_be_exclusive'),
        ),
    ]
